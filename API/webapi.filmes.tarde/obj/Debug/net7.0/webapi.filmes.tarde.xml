<?xml version="1.0"?>
<doc>
    <assembly>
        <name>webapi.filmes.tarde</name>
    </assembly>
    <members>
        <member name="T:webapi.filmes.tarde.Controllers.GenerosController">
            <summary>
            Define que a rota de uma requsicao sera no seguinte formato:
            dominio/api/nomeController
            exemplo: http://localhost:5000/api/Genero
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Controllers.GenerosController._generoRepository">
            <summary>
            Objeto que ira receber os metodos definidos na interface
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GenerosController.#ctor">
            <summary>
            Instancia do objeto _generoRepository para que haja referencia aos metodos dos repositorios
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GenerosController.Get">
            <summary>
            EndPoint que acessa o metodo de listar os generos
            </summary>
            <returns>Lista de generos e status code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GenerosController.GetId(System.Int32)">
            <summary>
            EndPoint para acessar o metodo de Buscar por ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GenerosController.Post(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            EndPoint que acessa o metodo cadastrar generos
            </summary>
            <returns>Cadastro de generos e status code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GenerosController.PutId(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            EndPoint que substitui um genero pelo ID 
            </summary>
            <param name="id">ID do objeto que sera substituido</param>
            <param name="novoGenero">Novo geenro</param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GenerosController.PutIdCorpo(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            EndPoint que substitui um genero pelo corpo
            </summary>
            <param name="novoGenero"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GenerosController.Delete(System.Int32)">
            <summary>
            EndPoint que acessa o metodo para deletar pelo ID
            </summary>
            <param name="id">Id que sera deleltado</param>
            <returns></returns>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.FilmeDomain">
            <summary>
            Classe que representa a entidade(tabela) Filme
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.GeneroDomain">
            <summary>
            Classe que representa a entidade (tabela) Genero
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.Cadastrar(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Cadastrar um novo filme
            </summary>
            <param name="novoFilme"></param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.ListarTodos">
            <summary>
            Listar todos os filmes
            </summary>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar filmes por Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualizar um objeto pelo corpo da requisicao
            </summary>
            <param name="filme"></param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualizar um filme pela URL
            </summary>
            <param name="id"></param>
            <param name="filme"></param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.Deletar(System.Int32)">
            <summary>
            Deletar um filme
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:webapi.filmes.tarde.Interfaces.IGeneroRepository">
            <summary>
            É uma interface responsavel pelo repositorio GeneroRepository
            Define os metodos que serão implementados pelo repositorio
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
             Cadastrar um novo genero
            </summary>
            <param name="novoGenero">Objeto que sera cadastrado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.ListarTodos">
            <summary>
            Retornar todos os generos cadastrados 
            </summary>
            <returns>Uma lista de generos</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um objeto atraves do seu id
            </summary>
            <param name="id">id do objeto que sera buscado</param>
            <returns>Objeto que foi buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
             Atualizar um genero existente passando o id pelo corpo da reqisição
            </summary>
            <param name="genero">Objeto com as novas informacoes</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar um genero existente passando o id pela URL da reqisição
            </summary>
            <param name="id">Id do objeto a ser atualizado</param>
            <param name="genero">Objeto com as novas informacoes</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.Deletar(System.Int32)">
            <summary>
            Deletar um genero existente
            </summary>
            <param name="id">Id do objeto que sera deletado</param>
        </member>
        <member name="F:webapi.filmes.tarde.Repositories.GeneroRepository.StringConexao">
            <summary>
            String de conexao com o banco de dados, que recebe os seguintes parametros:
            Data Source: Nome do servidor do banco
            Initial Catalog: Nome do banco de dados
            Autenticacao:
                - Windons: Integrated  Security True
                - Sql Server: User Id = sa; Pwd = senha;
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
             Esse metodo cadastra um novo genero
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.ListarTodos">
            <summary>
            Listar todos os objetos do tipo genero
            </summary>
            <returns>Lista de objetos do tipo genero</returns>
        </member>
    </members>
</doc>
